# TCL File Generated by Component Editor 13.1
# Sun May 08 20:58:13 CST 2016
# DO NOT MODIFY


# 
# osd_generater "osd_generater" v1.0
# Generate OSD Video
# Yogurt
# 2016.05.08.20:58:13	1.0
# 2016.07.22.17:02:00	1.1
# 2016.09.29.21:45:00	1.2
#

source "../../lib/aup_ip_generator.tcl"


# 
# module osd_generater
# 
set_module_property DESCRIPTION "Generate OSD Video"
set_module_property NAME osd_generater
set_module_property VERSION 1.2
set_module_property GROUP my_ip/video
set_module_property AUTHOR Yogurt
set_module_property DISPLAY_NAME osd_generater
set_module_property INSTANTIATE_IN_SYSTEM_MODULE true
set_module_property EDITABLE false
set_module_property ANALYZE_HDL false
set_module_property ELABORATION_CALLBACK elaborate
set_module_property GENERATION_CALLBACK generate


# 
# file sets
# 
add_file "hdl/osd_avalon_read_module.v" SYNTHESIS
add_file "hdl/osd_avalon_slave.v" SYNTHESIS
add_file "hdl/osd_encode.v" SYNTHESIS
add_file "hdl/osd_pixel_fifo.v" SYNTHESIS
add_file "hdl/osd_read_fifo.v" SYNTHESIS



# 
# parameters
# 
add_parameter data_width INTEGER 8
set_parameter_property data_width DISPLAY_NAME "Master Port Width"
set_parameter_property data_width UNITS None
set_parameter_property data_width DISPLAY_UNITS bits
set_parameter_property data_width AFFECTS_ELABORATION true
set_parameter_property data_width AFFECTS_GENERATION true
set_parameter_property data_width ALLOWED_RANGES {8 16 32 64 128}
set_parameter_property data_width VISIBLE true
set_parameter_property data_width ENABLED true

add_parameter dout_width INTEGER 10
set_parameter_property dout_width DISPLAY_NAME "Video Width"
set_parameter_property dout_width UNITS None
set_parameter_property dout_width DISPLAY_UNITS bits
set_parameter_property dout_width AFFECTS_ELABORATION true
set_parameter_property dout_width AFFECTS_GENERATION true
set_parameter_property dout_width ALLOWED_RANGES 4:32
set_parameter_property dout_width VISIBLE true
set_parameter_property dout_width ENABLED true


# +-----------------------------------
# | Elaboration function
# | 
proc elaborate {} {
	set data_width				[ get_parameter_value "data_width"]
	set dout_width				[ get_parameter_value "dout_width"]

	# 
	# connection point clock
	# 
	add_interface clock clock end
	set_interface_property clock ENABLED true

	add_interface_port clock clk clk Input 1

	# 
	# connection point reset
	# 
	add_interface reset reset end
	set_interface_property reset associatedClock clock
	set_interface_property reset synchronousEdges DEASSERT
	set_interface_property reset ENABLED true

	add_interface_port reset rst_n reset_n Input 1

	# 
	# connection point avalon_control
	# 
	add_interface avalon_control avalon end
	set_interface_property avalon_control addressUnits WORDS
	set_interface_property avalon_control associatedClock clock
	set_interface_property avalon_control associatedReset reset
	set_interface_property avalon_control bitsPerSymbol 8
	set_interface_property avalon_control burstOnBurstBoundariesOnly false
	set_interface_property avalon_control burstcountUnits WORDS
	set_interface_property avalon_control explicitAddressSpan 0
	set_interface_property avalon_control holdTime 0
	set_interface_property avalon_control linewrapBursts false
	set_interface_property avalon_control maximumPendingReadTransactions 0
	set_interface_property avalon_control readLatency 1
	set_interface_property avalon_control readWaitStates 0
	set_interface_property avalon_control readWaitTime 0
	set_interface_property avalon_control setupTime 0
	set_interface_property avalon_control timingUnits Cycles
	set_interface_property avalon_control writeWaitTime 0
	set_interface_property avalon_control ENABLED true

	add_interface_port avalon_control av_address address Input 3
	add_interface_port avalon_control av_write write Input 1
	add_interface_port avalon_control av_readdata readdata Output 32
	add_interface_port avalon_control av_writedata writedata Input 32
	add_interface_port avalon_control av_read read Input 1

	set_interface_assignment avalon_control embeddedsw.configuration.isFlash 0
	set_interface_assignment avalon_control embeddedsw.configuration.isMemoryDevice 0
	set_interface_assignment avalon_control embeddedsw.configuration.isNonVolatileStorage 0
	set_interface_assignment avalon_control embeddedsw.configuration.isPrintableDevice 0


	# 
	# connection point read_master
	# 
	add_interface read_master avalon start
	set_interface_property read_master addressUnits SYMBOLS
	set_interface_property read_master associatedClock clock
	set_interface_property read_master associatedReset reset
	set_interface_property read_master bitsPerSymbol 8
	set_interface_property read_master burstOnBurstBoundariesOnly false
	set_interface_property read_master burstcountUnits WORDS
	set_interface_property read_master doStreamReads false
	set_interface_property read_master doStreamWrites false
	set_interface_property read_master holdTime 0
	set_interface_property read_master linewrapBursts false
	set_interface_property read_master maximumPendingReadTransactions 1
	set_interface_property read_master readLatency 0
	set_interface_property read_master readWaitTime 1
	set_interface_property read_master setupTime 0
	set_interface_property read_master timingUnits Cycles
	set_interface_property read_master writeWaitTime 0
	set_interface_property read_master ENABLED true

	add_interface_port read_master am_address address Output 32
	add_interface_port read_master am_read read Output 1
	add_interface_port read_master am_readdatavalid readdatavalid Input 1
	add_interface_port read_master am_waitrequest waitrequest Input 1
	add_interface_port read_master am_readdata readdata Input $data_width
	add_interface_port read_master am_byteenable byteenable Output [ expr ($data_width/8) ]

	# 
	# connection point dout
	# 
	add_interface dout avalon_streaming start
	set_interface_property dout associatedClock clock
	set_interface_property dout associatedReset reset
	set_interface_property dout dataBitsPerSymbol $dout_width
	set_interface_property dout errorDescriptor ""
	set_interface_property dout firstSymbolInHighOrderBits true
	set_interface_property dout maxChannel 0
	set_interface_property dout readyLatency 1
	set_interface_property dout ENABLED true

	add_interface_port dout dout_data data Output $dout_width
	add_interface_port dout dout_valid valid Output 1
	add_interface_port dout dout_ready ready Input 1
	add_interface_port dout dout_startofpacket startofpacket Output 1
	add_interface_port dout dout_endofpacket endofpacket Output 1
}
# | 
# +-----------------------------------

# +-----------------------------------
# | Generation function
# | 
proc generate {} {
	set data_width				[ get_parameter_value "data_width"]
	set dout_width				[ get_parameter_value "dout_width"]
	set data_log 				[ format "%.0f" [ expr ceil (log($data_width) / (log (2))) ]]

	set data_log_p				"DATA_LOG:$data_log"
	set dout_width_p			"DOUT_WIDTH:$dout_width"

	set params 					"$data_log_p;$dout_width_p"
	set sections				""

	set dest_dir 				[ get_generation_property OUTPUT_DIRECTORY ]
	set dest_name				[ get_generation_property OUTPUT_NAME ]

	add_file "$dest_dir$dest_name.v" SYNTHESIS
	alt_up_generate "$dest_dir$dest_name.v" "hdl/osd_generater_top.v" "osd_generater_top" $dest_name $params $sections
}
# | 
# +-----------------------------------
